# Jedi Knight Cog Script
#
# C3_SASNEUTRAL.COG
#
# Sas doors control script for C3
# (Neutral = not red nor gold, by opposition to C3_SASCOLORED.COG)
#
# The sas door permit passage from the interior to the exterior only.
# Players who would be blocked in the sas may open the exterior door
# via a switch (3).
#
#
#   interior                                exterior
#  +------------------| |--------------| |----------
#  |                  | |              | |
#  |                  | |      _       | |
#  |              4   |1|     |3|      |2|
#  |                  | |     +-+      | |
#  |                  | |              | |
#  |           +====================================
#  |           | 1 = internal door
#  |           | 2 = external door
#  |           | 3 = switch
#  |           | 4 = internal sector
#
#
# [YB]
#
# (C) 1997 LucasArts Entertainment Co. All Rights Reserved
#
# Modified to support Rbots

symbols

thing       door_int                         desc=door_int mask=0x405
thing       door_ext                         desc=door_ext mask=0x405
surface     switch                           desc=switch
sector      sc_int                           desc=sector_int
flex        speed=4.0                        desc=speed
flex        delay=2.0                        desc=delay

int         doorsector_int=-1                local
int         doorsector_ext=-1                local
int         player                           local

int         sender                           local
int         source                           local
int         sendertype                       local

int         dummy                            local

sound       on_snd=set_hi2.wav               local
sound       off_snd=lgclick1.wav             local

message     startup
message		touched
message     activated

end

# ========================================================================================

code

startup:
   doorsector_int = GetThingSector(door_int);
   doorsector_ext = GetThingSector(door_ext);
   SectorAdjoins(doorsector_int, 0);
   SectorAdjoins(doorsector_ext, 0);

   Return;

# ........................................................................................

touched:
	if (GetThingType(GetSourceRef()) == 2) {
		// This is a bot, so treat the touch like an activate and open the door
		goto activated;
	}
	return;

# ........................................................................................

activated:
   if(IsMoving(door_int) == 1) Return;// Exit if one of the doors is moving
   if(IsMoving(door_ext) == 1) Return;
   if(GetCurFrame(door_int) == 1) Return;    // Exit if one of the doors is open
   if(GetCurFrame(door_ext) == 1) Return;

   sendertype = GetSenderType();
   sender = GetSenderRef();
   player = GetSourceRef(); // Note: may be a player or a bot - check the thing type to find out

   if(sendertype == 3)                       // Sender is a thing
   {
      if(sender == door_int)                 // Interior door activated
      {
         // Exit if the player is not in the interior sector
         if(GetThingSector(player) != sc_int) Return;

         call open_int;
         Sleep(delay);
         call close_int;

         dummy = SetWallCel(switch, 1);      // auto open exterior door
         dummy = PlaySoundPos(on_snd, SurfaceCenter(switch), 0.8, 5.0, 10.0, 0);
         call open_ext;
         Sleep(delay);
         call close_ext;
         dummy = SetWallCel(switch, 0);
         dummy = PlaySoundPos(off_snd, SurfaceCenter(switch), 0.8, 5.0, 10.0, 0);
      }

      if(sender == door_ext)                 // Exterior door activated
      {
         Return;                             // Don't activate this door at all except via the switch !
      }
   }

   if(sendertype == 6)                       // Sender is a surface
   {
      if(sender == switch)                   // Switch activated
      {
         dummy = SetWallCel(switch, 1);
         dummy = PlaySoundPos(on_snd, SurfaceCenter(switch), 0.8, 5.0, 10.0, 0);
         call open_ext;
         Sleep(delay);
         call close_ext;
         dummy = SetWallCel(switch, 0);
         dummy = PlaySoundPos(off_snd, SurfaceCenter(switch), 0.8, 5.0, 10.0, 0);
      }
   }

   Return;

# ........................................................................................

open_int:
   if(GetCurFrame(door_int) == 0)
   {
      SectorAdjoins(doorsector_int, 1);
      MoveToFrame(door_int, 1, speed);
      WaitForStop(door_int);
   }

   Return;

# ........................................................................................

close_int:
   if(GetCurFrame(door_int) == 1)
   {
      MoveToFrame(door_int, 0, speed);
      WaitForStop(door_int);
      SectorAdjoins(doorsector_int, 0);
   }

   Return;

# ........................................................................................

open_ext:
   if(GetCurFrame(door_ext) == 0)
   {
      SectorAdjoins(doorsector_ext, 1);
      MoveToFrame(door_ext, 1, speed);
      WaitForStop(door_ext);
   }

   Return;

# ........................................................................................

close_ext:
   if(GetCurFrame(door_ext) == 1)
   {
      MoveToFrame(door_ext, 0, speed);
      WaitForStop(door_ext);
      SectorAdjoins(doorsector_ext, 0);
   }

   Return;

end


