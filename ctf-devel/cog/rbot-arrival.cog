# Rbot Arrival Cog
#
# Server - unsynch
#
# Rbots originally created by Raynar

flags=0x280

symbols

message		trigger
message		arrived

# Nodes
thing		node0=-1		nolink
thing		node1=-1		nolink
thing		node2=-1		nolink
thing		node3=-1		nolink
thing		node4=-1		nolink
thing		node5=-1		nolink
thing		node6=-1		nolink
thing		node7=-1		nolink
thing		node8=-1		nolink
thing		node9=-1		nolink

# Run direction for each node
# -1 = forward or backward
# 0 = backward only
# 1 = forward only
int			rundir0=-1
int			rundir1=-1
int			rundir2=-1
int			rundir3=-1
int			rundir4=-1
int			rundir5=-1
int			rundir6=-1
int			rundir7=-1
int			rundir8=-1
int			rundir9=-1

# The thing that must arrive at a frame
thing		arriver0=-1
thing		arriver1=-1
thing		arriver2=-1
thing		arriver3=-1
thing		arriver4=-1
thing		arriver5=-1
thing		arriver6=-1
thing		arriver7=-1
thing		arriver8=-1
thing		arriver9=-1

# The frame that the thing must arrive at
int			frame0=-1
int			frame1=-1
int			frame2=-1
int			frame3=-1
int			frame4=-1
int			frame5=-1
int			frame6=-1
int			frame7=-1
int			frame8=-1
int			frame9=-1

# How long to wait for arrival before bot is 'lost'
flex		timeout0=30.0
flex		timeout1=30.0
flex		timeout2=30.0
flex		timeout3=30.0
flex		timeout4=30.0
flex		timeout5=30.0
flex		timeout6=30.0
flex		timeout7=30.0
flex		timeout8=30.0
flex		timeout9=30.0

# Keep track of whether any bots might be waiting for any events
# This prevents sending duplicate and unnecessary triggers
int			waiting0=0		local
int			waiting1=0		local
int			waiting2=0		local
int			waiting3=0		local
int			waiting4=0		local
int			waiting5=0		local
int			waiting6=0		local
int			waiting7=0		local
int			waiting8=0		local
int			waiting9=0		local

# Special mode flags to apply to the bot when it needs to await arrival
int			spinf0=0
int			spinf1=0
int			spinf2=0
int			spinf3=0
int			spinf4=0
int			spinf5=0
int			spinf6=0
int			spinf7=0
int			spinf8=0
int			spinf9=0

# Misc
int			i				local
int			index			local
thing		node			local
int			rundir			local
thing		arriver			local
int			frame			local
flex		timeout			local
int			mode			local
int			special			local
int			botid			local
int			event_id		local

end

# ========================================================================================

code

trigger:
	if (!IsServer()) return;
	
	if (GetSourceRef() == 11010) // Bot arrived at node
	{
		botid = GetParam(0); // which bot requested the info
		node = GetParam(2); // which node the bot arrived at

		// work out special arrival info
		index = -1;
		rundir = -1;
		arriver = -1;
		frame = -1;
		timeout = 0.0;
		special = 0;
		for (i = 0 ; i < 10 ; i = i + 1)
		{
			if (node0[i] == node)
			{
				index = i;
				rundir = rundir0[i];
				arriver = arriver0[i];
				frame = frame0[i];
				timeout = timeout0[i];
				special = spinf0[i];
			}
		}

		if (index == -1 || arriver == -1 || frame == -1 || timeout <= 0.0) return; // No special arrival info for this node
		if (GetCurFrame(arriver) == frame && !IsThingMoving(arriver)) return; // Thing already at frame

		// Tell the bot to wait for the thing to arrive at the frame
		mode = 0x3; // default - await arrival when running forward or backward
		if (rundir == 1) mode = 0x1; // await arrival when running forward
		if (rundir == 0) mode = 0x2; // await arrival when running backward

		// Generate a distinct arrival event ID from the arriver thing and frame
		// Reserve 0-999 for custom user cogs
		event_id = 100000 + frame*1000 + node;

		// Set the waiting flag for this record so we know to send the arrival event when the thing
		// arrives at the frame
		waiting0[index] = 1;

		// Tell bot to wait (depending on the run direction)
		SendTrigger(-1, 11040, botid, mode, event_id, timeout);

		// Send special info for node, if necessary
		if (special)
		{
			SendTrigger(-1, 11020, botid, special, 2, -1); // send special info to bot (mode 2 = activate for short duration)
		}
	}
	return;

arrived:
	if (!IsServer()) return;

	arriver = GetSenderRef();
	if (IsThingMoving(arriver)) return; // Thing still moving and didn't stop at this frame
	frame = GetCurFrame(arriver);

	// Send any pending arrival events
	for (i = 0 ; i < 10 ; i = i + 1)
	{
		if (arriver0[i] == arriver && frame0[i] == frame && waiting0[i])
		{
			node = node0[i];

			// Generate the same distinct arrival event ID that the bot would be waiting for
			event_id = 100000 + frame*1000 + node;

			// Clear the waiting flag for this record - no need to send another arrival event
			// until next time a bot is waiting for one
			waiting0[i] = 0;

			// Broadcast arrival event to all bots
			SendTrigger(-1, 11050, event_id, -1, -1, -1);
		}
	}
	
	return;

end

