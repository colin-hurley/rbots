# Rbot Server Cog - CTF Extensions
#
# Server-only
# Type ID: 1021
#
# Rbots originally created by Raynar
# Additional code by Hell Raiser

flags=0x40

symbols

message		startup
message		trigger
message		user7

int			botid=0

# Internal bot references
thing		rbot=-1								local
cog			srv=-1								local

# The state of each flag
# 0 = Flag at base
# 1 = Flag dropped
# 2 = Flag taken (i.e. held by actor or player)
int			captured_red						local
int			captured_gold						local

# The actor or player that is carrying each flag
thing		redflag_taken=-1					local
thing		goldflag_taken=-1					local

# Item templates
template	tmp_ctfredkey=CTF_REDKEY			local
template	tmp_ctfgoldkey=CTF_GOLDKEY			local
template	tmp_ctfredflag=ctf_redflag			local
template	tmp_ctfgoldflag=ctf_goldflag		local

# Transient working vars
int			curteam								local
int 		inv_keys							local
int			priority							local
thing		item								local
thing		potential							local

end

# Code Section

code

startup:
	if (IsMulti() && !IsServer()) return; // Host only

	// Allow other server-side cogs to discover this one by its type
	SendTrigger(-1, 1852000, 1021, GetSelfCog(), botid, -1);

	return;

trigger:
	if (IsMulti() && !IsServer()) return; // Host only

	if (GetSourceRef() == 1852000) // Rbot cog type discovery
	{
		if (GetParam(0) == 1020) // rbot-srv.cog
		{
			if (GetParam(2) == botid) srv = GetParam(1);
		}
		return;
	}

	if (GetSourceRef() == 12210) // updated CTF info
	{
		captured_red = GetParam(0);
		captured_gold = GetParam(1);
		redflag_taken = GetParam(2);
		goldflag_taken = GetParam(3);
		return;
	}

	if (GetParam(0) != botid) return; // not for this bot

	if (GetSourceRef() == 950) // bot respawned
	{
		rbot = GetParam(1);
		curteam = GetParam(3);

		// Initialize default bot state
		inv_keys = SendMessageEx(srv, user7, 10201028, -1, -1, -1);
		if (curteam == 1) inv_keys = BitSet(inv_keys, 0x1); // Red team - get red CTF key by default
		if (curteam == 2) inv_keys = BitSet(inv_keys, 0x2); // Gold team - get gold CTF key by default
		SendMessageEx(srv, user7, 10202028, inv_keys, -1, -1);

		return;
	}

	return;

// Execute public API function for this cog
// Param 0 = Function ID
// The remaining params will be processed according to the requested function
// For example, param1 might be an index into an array.
// Returns the function-specific result of the execution
user7:
	if (GetParam(0) == 10213010) // get item priority
	{
		item = GetParam(1);
		priority = GetParam(2);
		curteam = SendMessageEx(srv, user7, 10201002, -1, -1, -1);
		if (GetThingTemplate(item) == tmp_ctfredflag)
		{
			if (captured_red == 1) priority = 10; // red flag dropped
			if (curteam == 1) // bot on red team
			{
				if (captured_red == 0 && goldflag_taken == rbot) priority = 10; // red flag home & bot has gold flag
			}
			else // bot on gold team
			{
				if (captured_red == 0) priority = 10; // red flag home
			}
		}
		if (GetThingTemplate(item) == tmp_ctfgoldflag)
		{
			if (captured_gold == 1) priority = 10; // gold flag dropped
			if (curteam == 2) // bot on gold team
			{
				if (captured_gold == 0 && redflag_taken == rbot) priority = 10; // gold flag home & bot has red flag
			}
			else // bot on red team
			{
				if (captured_gold == 0) priority = 10; // gold flag home
			}
		}
		inv_keys = SendMessageEx(srv, user7, 10201028, -1, -1, -1);
		if (GetThingTemplate(item) == tmp_ctfredkey && !BitTest(inv_keys, 0x1)) priority = 9; // CTF red key
		if (GetThingTemplate(item) == tmp_ctfgoldkey && !BitTest(inv_keys, 0x2)) priority = 9; // CTF gold key
		ReturnEx(priority);
		return;
	}

	if (GetParam(0) == 10213020) // pickup item
	{
		item = GetParam(1);

		if (GetThingTemplate(item) == tmp_ctfredkey)
		{
			// CTF keys are simply added to the inventory - they don't get "taken" from the level like normal powerups
			inv_keys = SendMessageEx(srv, user7, 10201028, -1, -1, -1);
			inv_keys = BitSet(inv_keys, 0x1);
			SendMessageEx(srv, user7, 10202028, inv_keys, -1, -1);
			return;
		}

		if (GetThingTemplate(item) == tmp_ctfgoldkey)
		{
			// CTF keys are simply added to the inventory - they don't get "taken" from the level like normal powerups
			inv_keys = SendMessageEx(srv, user7, 10201028, -1, -1, -1);
			inv_keys = BitSet(inv_keys, 0x2);
			SendMessageEx(srv, user7, 10202028, inv_keys, -1, -1);
			return;
		}

		if (GetThingTemplate(item) == tmp_ctfredflag || GetThingTemplate(item) == tmp_ctfgoldflag)
		{
			// The ctf_main.cog handles flag pickups
			SendTrigger(-1, 12200, botid, item, rbot, -1);
			return;
		}

		ReturnEx(0);
		return;
	}

	if (GetParam(0) == 10213030) // get target priority
	{
		potential = GetParam(1);
		priority = GetParam(2);
		curteam = SendMessageEx(srv, user7, 10201002, -1, -1, -1);
		// Give bot on opposing team highest priority if they are carrying a flag
		if (curteam == 1 && captured_red == 2 && redflag_taken == potential) priority = 10; // teamplay - bot on red team - red flag has been taken and potential has it
		if (curteam == 2 && captured_gold == 2 && goldflag_taken == potential) priority = 10; // teamplay - bot on gold team - gold flag has been taken and potential has it
		ReturnEx(priority);
		return;
	}

	if (GetParam(0) == 10213050) // decide whether to move toward target
	{
		if (goldflag_taken == rbot || redflag_taken == rbot) // bot has flag
		{
			// The bot has the flag and is trying to score, so continue moving toward the base
			ReturnEx(0);
			return;
		}
		ReturnEx(1);
		return;
	}

	// Report error if function ID does not match anything above
	jkStringClear();
	jkStringConcatFormattedInt(GetSenderRef(), "rbot-srv-ctf.cog :: ERROR :: Cog %d");
	jkStringConcatFormattedInt(GetParam(0), " has requested an invalid function ID, %d");
	jkStringOutput(-1, -1);
	return;

end
