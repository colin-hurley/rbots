# Jedi Knight Cog Script
#
# 00_ELEVCALL.COG
#
# This Cog controls one elevator that can be summoned to any number of floors
# A cog must be placed at each floor to be attached to the call button, the up and down
# buttons, and the elevator.
# You have to manually assign to each cog what floor level it is on.
# Remember that the elevator's first frame is 0 even though your first floor may be one.
#
# This is a customized version of 00_elevcall.cog by LucasArts that has been updated
# to support Rbots. It can be used as a drop-in replacement for any case where the
# original is used, although there are some additional paramters that should be
# configured for proper operation.
#
# Rbots originally created by Raynar


symbols

message     activated
## message     blocked
message     arrived
message     trigger

surface     callbutton                       //calls elevator to level
surface     upbutton                         //sends elevator up
surface     dnbutton                         //sends elevator down

thing       elevator                         //currently handles only one elevator

flex        speed=5.0                        //sets speed default is 5
flex        floorlevel=0.0                   //sets floor level for each cog
flex        totalfloors=0.0                  //lastfloor + 1
sound       callbutt=beep2.wav      local    //button sounds
sound       updnbutt=beep1.wav      local

int         switch                  local    //check variable for cog internal use
int         bnosound=0              local

thing       callnode=-1             nolink   //activate the callbutton upon reaching this node
thing       upnode=-1               nolink   //activate the upnbutton upon reaching this node
thing       dnnode=-1               nolink   //activate the dnnbutton upon reaching this node

int         callrundir=-1                    //activate the callbutton while running in this direction
int         uprundir=-1                      //activate the upnbutton while running in this direction
int         dnrundir=-1                      //activate the dnnbutton while running in this direction

flex        timeout=10.0                     //how long to wait after calling the elevator

int         waiting=0               local

# Transient working variables
int         botid                   local
thing       rbotnode                local
int         rbotrundir              local

end

## Code Section

code

//-------------------------------------------------------------------------------------------------

activated:
   switch = GetSenderRef();

do_activated:
        if ((GetCurFrame(elevator) == floorlevel) && (switch == callbutton)) //if elevator is at the current floor
        {
         SetWallCel(callbutton,1);
         SetWallCel(callbutton,0);
        }
   else if ((switch == callbutton) && (bnosound == 0)) //if callbutton is pushed
        {
         PlaySoundPos(callbutt, SurfaceCenter(callbutton), 0.6, -1, -1, 0 );
         bnosound = 1;
         SetWallCel(callbutton,1);
         MoveToFrame(elevator,floorlevel,speed);
         WaitForStop(elevator);
         bnosound = 0;
         SetWallCel(callbutton,0);
        }
   else if ((switch == upbutton) && (floorlevel == GetCurFrame(elevator)) && (GetCurFrame(elevator) < totalfloors)) //if upbutton is pushed
        {
         PlaySoundPos(updnbutt, SurfaceCenter(upbutton), 0.6, -1, -1, 0 );
         SetWallCel(upbutton,1);
         MoveToFrame(elevator,(floorlevel+1),speed);
         WaitForStop(elevator);
         SetWallCel(upbutton,0);
        }
   else if ((switch == dnbutton) && (floorlevel == GetCurFrame(elevator)) && (floorlevel > 0)) //if down button is pushed
        {
         PlaySoundPos(updnbutt, SurfaceCenter(dnbutton), 0.6, -1, -1, 0 );
         SetWallCel(dnbutton,1);
         MoveToFrame(elevator, (floorlevel-1), speed);
         WaitForStop(elevator);
         SetWallCel(dnbutton,0);
        }
        return;

//-------------------------------------------------------------------------------------------------

//blocked:
//        MoveToFrame(elevator,(GetCurFrame(elevator)), speed);
//        return;

//-------------------------------------------------------------------------------------------------

arrived:
	if (IsMulti() && !IsServer()) return; // Host only

	if (IsThingMoving(elevator)) return; // Elevator is still moving and didn't stop at this floor

	if (GetCurFrame(elevator) == floorlevel) // Elevator has arrived at this floor
	{
		if (waiting) // there may be a bot waiting for the elevator
		{
			// Clear the waiting flag - no need to send another arrival event
			// until next time a bot is waiting for one
			waiting = 0;

			// Broadcast arrival event to all bots
			SendTrigger(-1, 11050, GetSelfCog(), 1, -1, -1);
		}
	}

	return;

//-------------------------------------------------------------------------------------------------

trigger:
	if (IsMulti() && !IsServer()) return; // Host only

	if (GetSourceRef() == 11010) // Bot arrived at node
	{
		botid = GetParam(0); // the bot making the request
		#rbot = GetParam(1); // the bot thing
		rbotnode = GetParam(2); // which node the bot arrived at
		rbotrundir = GetParam(3); // which direction the bot is running

		if (rbotnode == callnode) // bot has reached the call button
		{
			if (callrundir == -1 || callrundir == rbotrundir) // bot is entering the elevator shaft
			{
				if (GetCurFrame(elevator) != floorlevel) // elevator is at another floor
				{
					// Tell bot to wait for the elevator
					waiting = 1; // bot is awaiting arrival event
					SendTrigger(-1, 11040, botid, GetSelfCog(), 1, timeout);

					// Activate call button
					switch = callbutton;
					goto do_activated; // note: this blocks until the elevator is done moving
				}
			}
		}

		if (rbotnode == upnode) // bot has reached the up button
		{
			if (uprundir == -1 || uprundir == rbotrundir) // bot is trying to go up
			{
				if (GetCurFrame(elevator) == floorlevel) // elevator is at this floor
				{
					// Give the bot a moment to completely enter the elevator shaft
					Sleep(0.5);

					// Activate up button
					switch = upbutton;
					goto do_activated; // note: this blocks until the elevator is done moving
				}
			}
		}

		if (rbotnode == dnnode) // bot has reached the down button
		{
			if (dnrundir == -1 || dnrundir == rbotrundir) // bot is trying to go down
			{
				if (GetCurFrame(elevator) == floorlevel) // elevator is at this floor
				{
					// Give the bot a moment to completely enter the elevator shaft
					Sleep(0.5);

					// Activate down button
					switch = dnbutton;
					goto do_activated; // note: this blocks until the elevator is done moving
				}
			}
		}

		return;
	}

	return;

//-------------------------------------------------------------------------------------------------

end
