# Rbot Administration Cog - Teleport
#
# This utility will teleport bots and players:
# * Toggle teleport mode (use current player/bot position or use saved location)
# * Teleport bot
# * Teleport player
#
# See also: rbot-admin.cog
#
# Rbots originally created by Raynar

flags=0x240

symbols

message		startup
message		shutdown
message		user0
message		user1
message		trigger

cog			nav=-1								local
cog			srv=-1								local
thing		pos=-1								local

# We can't dynamically create 'ghost' things (they can only be statically
# placed in the JKL), so we create '_ghostdecor' things instead, which are
# virtually identical.
template	ghost=_ghostdecor					local

int			toggle_mode							local
int			teleport_bot						local
int			teleport_player						local

# Working vars
thing		rbot								local
thing		player								local

end

code

startup:
	// Register functions
	toggle_mode = SendMessageEx(GetInvCog(GetLocalPlayerThing(), 118), user0, -1, -1, -1, -1);
	teleport_bot = SendMessageEx(GetInvCog(GetLocalPlayerThing(), 118), user0, -1, -1, -1, -1);
	teleport_player = SendMessageEx(GetInvCog(GetLocalPlayerThing(), 118), user0, -1, -1, -1, -1);
	return;

shutdown:
	// Reinitialize to default values when exiting level
	nav = -1;
	srv = -1;
	pos = -1;
	return;

// Execute
user0:
	player = GetLocalPlayerThing();

	// This function can be invoked without selecting a bot
	if (GetParam(0) == toggle_mode)
	{
		if (pos == -1)
		{
			pos = CreateThingAtPos(ghost, GetThingSector(player), GetThingPos(player), '0 0 0');
			SetThingLook(pos, GetThingLVec(player));
			Print("Teleport location saved");
		}
		else
		{
			DestroyThing(pos);
			pos = -1;
			Print("Teleport location cleared");
		}
		return;
	}

	// Remaining functions require a selected bot
	// FIXME: Technically, we don't need a bot selected to teleport the player to a saved location, but this logic currently requires it
	if (srv != -1)
	{
		rbot = SendMessageEx(srv, user7, 10201013, -1, -1, -1);
		if (rbot != -1 && GetThingHealth(rbot) > 0) // Bot is alive
		{
			if (GetParam(0) == teleport_bot)
			{
				// Teleport bot to player's location
				StopThing(rbot);
				if (pos == -1) TeleportThing(rbot, player);
				else TeleportThing(rbot, pos);
				SendMessageEx(nav, user7, 10603000, rbot, -1, -1); // request navigation update for bot
			}
			else if (GetParam(0) == teleport_player)
			{
				// Teleport player to bot's location
				StopThing(player);
				if (pos == -1) TeleportThing(player, rbot);
				else TeleportThing(player, pos);
			}
		}
	}
	else
	{
		Print("No bot selected");
	}
	return;

// Concat current state
user1:
	if (GetParam(0) == toggle_mode)
	{
		if (pos == -1) jkStringConcatAsciiString("Teleport mode (CURRENT POSITION)");
		else jkStringConcatAsciiString("Teleport mode (SAVED POSITION)");
	}
	else if (GetParam(0) == teleport_bot) jkStringConcatAsciiString("Teleport bot");
	else if (GetParam(0) == teleport_player) jkStringConcatAsciiString("Teleport player");
	return;

trigger:
	if (IsMulti() && !IsServer()) return; // Host only

	if (GetSourceRef() == 1852000) // Rbot cog type discovery
	{
		if (GetParam(0) == 1060) // rbot-nav.cog
		{
			nav = GetParam(1);
		}
		return;
	}

	if (GetSourceRef() == 15080) // New bot selected
	{
		srv = GetParam(1);
		return;
	}
	return;

end
