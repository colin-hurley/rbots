# Jedi Knight Cog Script
#
# 00_ELEVCALL.COG
#
# This Cog controls one elevator that can be summoned to any number of floors
# A cog must be placed at each floor to be attached to the call button, the up and down
# buttons, and the elevator.
# You have to manually assign to each cog what floor level it is on.
# Remember that the elevator's first frame is 0 even though your first floor may be one.
#
# This is a customized version of 00_elevcall.cog by LucasArts that has been updated
# to support Rbots. It can be used as a drop-in replacement for any case where the
# original is used, although it may need to be combined with other scripts (such as
# rbot-arrival.cog) for best results.
#
# Rbots originally created by Raynar


symbols

message     activated
## message     blocked
message     trigger

surface     callbutton                       //calls elevator to level
surface     upbutton                         //sends elevator up
surface     dnbutton                         //sends elevator down

thing       elevator                         //currently handles only one elevator

flex        speed=5.0                        //sets speed default is 5
flex        floorlevel=0.0                   //sets floor level for each cog
flex        totalfloors=0.0                  //lastfloor + 1
sound       callbutt=beep2.wav      local    //button sounds
sound       updnbutt=beep1.wav      local

int         switch                  local    //check variable for cog internal use
int         bnosound=0              local

# Transient working variables
#thing       rbot                    local
surface     buttonref               local

end

## Code Section

code

//-------------------------------------------------------------------------------------------------

activated:
   switch = GetSenderRef();

do_activated:
        if ((GetCurFrame(elevator) == floorlevel) && (switch == callbutton)) //if elevator is at the current floor
        {
         SetWallCel(callbutton,1);
         SetWallCel(callbutton,0);
        }
   else if ((switch == callbutton) && (bnosound == 0)) //if callbutton is pushed
        {
         PlaySoundPos(callbutt, SurfaceCenter(callbutton), 0.6, -1, -1, 0 );
         bnosound = 1;
         SetWallCel(callbutton,1);
         MoveToFrame(elevator,floorlevel,speed);
         WaitForStop(elevator);
         bnosound = 0;
         SetWallCel(callbutton,0);
        }
   else if ((switch == upbutton) && (floorlevel == GetCurFrame(elevator)) && (GetCurFrame(elevator) < totalfloors)) //if upbutton is pushed
        {
         PlaySoundPos(updnbutt, SurfaceCenter(upbutton), 0.6, -1, -1, 0 );
         SetWallCel(upbutton,1);
         MoveToFrame(elevator,(floorlevel+1),speed);
         WaitForStop(elevator);
         SetWallCel(upbutton,0);
        }
   else if ((switch == dnbutton) && (floorlevel == GetCurFrame(elevator)) && (floorlevel > 0)) //if down button is pushed
        {
         PlaySoundPos(updnbutt, SurfaceCenter(dnbutton), 0.6, -1, -1, 0 );
         SetWallCel(dnbutton,1);
         MoveToFrame(elevator, (floorlevel-1), speed);
         WaitForStop(elevator);
         SetWallCel(dnbutton,0);
        }
        return;

//-------------------------------------------------------------------------------------------------

//blocked:
//        MoveToFrame(elevator,(GetCurFrame(elevator)), speed);
//        return;

//-------------------------------------------------------------------------------------------------

trigger:
	if (IsMulti() && !IsServer()) return; // Host only

	if (GetSourceRef() == 11031) // "activate" trigger
	{
		#rbot = GetParam(0);
		buttonref = GetParam(1);

		if (callbutton != -1 && callbutton == buttonref)
		{
			switch = callbutton;
			goto do_activated;
			return;
		}

		if (upbutton != -1 && upbutton == buttonref)
		{
			switch = upbutton;
			goto do_activated;
			return;
		}

		if (dnbutton != -1 && dnbutton == buttonref)
		{
			switch = dnbutton;
			goto do_activated;
			return;
		}

		return;
	}

	return;

//-------------------------------------------------------------------------------------------------

end
