# Rbot Server - Force Powers
#
# Server-only
# Type ID: 1022
#
# Rbots originally created by Raynar
# Additional code by Hell Raiser

flags=0x40

symbols

message		startup
message		trigger
message		timer
message		user0
message		user7

int			botid=0
int			forceflags=15

int			forcemode					local
int			mana						local
int			forcearmor					local
int			starthealth					local

cog			srv=-1						local

# Force effects
template	force_lightning=+force_lightning	local
template	force_destruction=+force_dest_p4	local
template    force_blinding=+force_blind			local
template	smoke_tpl=+heavysmoke				local

# Force sound effects
sound		pullSound=FPush.WAV			local

# Pulled weapon templates
template	tpl0=+FPBryarPistol			local
template	tpl1=+FPBryarPistol			local
template	tpl2=+FPBryarPistol			local
template	tpl3=+FPSTrifle				local
template	tpl4=+FPDetonator			local
template	tpl5=+FPCrossbow			local
template	tpl6=+FPRepeaterGun			local
template	tpl7=+FPRailGun				local
template	tpl8=+FPSeqCharge			local
template	tpl9=+FPConcRifle			local
template	tpl10=+FPBryarPistol		local

# Working vars
thing		rbot			local
thing		target			local
thing		item			local
int			botmode			local
int			gamemode		local
int			difficulty		local
int			griptrackID		local
int			dscount			local
int			curweap			local
int			targweap		local
flex		tempflex1		local
vector		tempvector1		local
int			bin				local
int			rank			local
thing		enemy			local
thing		forcetarget		local
thing		debris			local
flex		damage			local
int			damagetype		local

end

code

startup:
	if (IsMulti() && !IsServer()) {
		// Server-only
		return;
	}

	// Allow other server-side cogs to discover this one by its type
	SendTrigger(-1, 1852000, 1022, GetSelfCog(), botid, -1);

	return;

trigger:
	if (IsMulti() && !IsServer()) {
		// Server-only
		return;
	}

	if (GetSourceRef() == 1852000) {
		// Rbot cog type discovery
		if (GetParam(0) == 1020) {
			// rbot-srv.cog
			if (GetParam(2) == botid) srv = GetParam(1);
		}
	}

	if (getparam(0) != botid) return; // not for this bot
	if (getsourceref() == 101040) // mana update
	{
		mana=mana+GetParam(1);
		if (mana>400) mana=400;
		if (GetParam(2) == 1)
		{
			forcemode=BitSet(forcemode,0x4000); // lightside surge now active
			SetTimerEx(20, 65, -1, -1); // switch off after 20 secs
		}
		else if (GetParam(2) == 2)
		{
			forcemode=BitSet(forcemode,0x8000); // darkside surge now active
			SetTimerEx(20, 64, -1, -1); // switch off after 20 secs
		}
	}
	return;

timer:
	rbot = SendMessageEx(srv, user7, 1013, -1, -1, -1);
	target = SendMessageEx(srv, user7, 1010, -1, -1, -1);
	difficulty = SendMessageEx(srv, user7, 1005, -1, -1, -1);
	botmode = SendMessageEx(srv, user7, 1003, -1, -1, -1);
	if(GetSenderId() == 22) // after force speed
	{
		forcemode=BitClear(forcemode,0x01); // speed is no longer active
		SendTrigger(-1, 101026, botid, rbot, -1, 22); // tell client to stop playing sound
	}
	else if(GetSenderId() == 23) // after force seeing
	{
		forcemode=BitClear(forcemode,0x08); // seeing is no longer active
		SendTrigger(-1, 101026, botid, rbot, -1, 23); // tell client to stop playing sound
	}
	else if(GetSenderId() == 24) // after force pull
	{
		SetCollideType(GetParam(0), 1); // pulled weapon must be made takeable again
		SetPhysicsFlags(GetParam(0), 1); // make it affected by gravity
		SetLifeLeft(GetParam(0), 30); // make it last for 30 secs
	}
	else if(GetSenderId() == 26) // after force persuasion
	{
		ClearActorFlags(rbot, 0x80);
		jkClearFlags(rbot, 0x20);
		forcemode=BitClear(forcemode,0x20); // persuasion is no longer active
		SendTrigger(-1, 101026, botid, rbot, -1, 26); // tell client to stop playing sound
	}
	else if(GetSenderId() == 27) // after force blinding
	{
		ClearActorFlags(rbot, 0x800);  // allow bot to see again
	}
	else if(GetSenderId() == 28) // after force absorb
	{
		forcemode=BitClear(forcemode,0x80); // absorb is no longer active
	}
	else if(GetSenderId() == 29) // after force protection
	{
		forcemode=BitClear(forcemode,0x100); // protection is no longer active
		ClearThingFlags(rbot, 4); // remove magseal from bot
		SendTrigger(-1, 101026, botid, rbot, -1, 29); // tell client to stop playing sound
	}
	else if(GetSenderId() == 31) // force grip
	{
		target=GetParam(0);
		griptrackID = GetParam(1);
		ClearActorFlags(target, 0x40000); // allow target to move again
		if (griptrackID != -1 && GetThingHealth(target) > 0) StopKey(target, griptrackID, 0.1); // stop target playing 'grip' key but only if target is still alive
		if (HasLOS(rbot,target) && GetThingHealth(rbot) > 0 && GetThingHealth(target) > 0 && VectorDist(GetThingPos(rbot), GetThingPos(target)) <= 1)
		{
			griptrackID=PlayMode(target, 25); // make target play 'gripped' key
			SetActorFlags(target, 0x40000);
			if (GetThingType(target) == 10) jkPrintUNIString(target, 300); // Print("You are taking Grip damage");
			DamageThing(target, 2 * (4+difficulty), 0x8, rbot);
			SendTrigger(-1,101025,botid,rbot,target,31); // get client to play 'grip' sound
			SetTimerEx(0.5, 31, target, griptrackID); // allow bot to grip target again in 0.5 sec
		}
		else forcemode=BitClear(forcemode,0x400); // grip is no longer active
	}
	else if(GetSenderId() == 34) // force deadly sight
	{
		dscount=dscount+1;
		if ((dscount > difficulty*3) || (GetThingHealth(rbot) < starthealth) || (GetActorFlags(rbot) & 0x800))
		{
			SendTrigger(-1, 101026, botid, rbot, target, 34); // tell client to stop playing sound
			forcemode=BitClear(forcemode,0x2000); // deadly sight is no longer active
			return;
		}
		item = FirstThingInView(rbot, 20 + 15 * (2+difficulty), 4 + difficulty, 0x404);
		while(item != -1)
		{
			if (HasLOS(rbot, item) && (item != rbot) && !(GetThingFlags(item) & 0x200))
			{
				if (GetThingType(item) == 2) // another bot
				{
					SendMessageEx(GetThingCaptureCog(item), user0, item, rbot, 34, 2+difficulty);  // send info to bot
				}
				else if (GetThingType(item) == 10) // player
				{
					SendTrigger(item, 101999, GetThingSignature(item), rbot, 34, 2+difficulty); // send info to player
				}
			}
			item = NextThingInView();
		}
		SetTimerEx(0.5, 34, -1, -1); // allow bot to deadly sight again in 0.5 sec
	}
	else if (GetSenderId() == 64) // after darkside surge
	{
		forcemode=BitClear(forcemode,0x8000); // darkside surge no longer active
	}
	else if (GetSenderId() == 65) // after lightside surge
	{
		forcemode=BitClear(forcemode,0x4000); // lightside surge no longer active
	}
	else if (GetSenderId() == 500 && BitTest(botmode,0x10000)) // increase mana over time && bot alive
	{
		if (difficulty > 0) mana=mana+difficulty*5; else mana=mana+5;
		if (mana > 400) mana=400;
		SetTimerEx(5.0, 500, -1, -1); // schedule mana increase
	}
	else if (GetSenderId() == 501 && BitTest(botmode,0x10000)) // force power attacks && bot alive
	{
		curweap = SendMessageEx(srv, user7, 1014, -1, -1, -1);
		targweap = SendMessageEx(srv, user7, 1015, -1, -1, -1);
		gamemode = SendMessageEx(srv, user7, 1004, -1, -1, -1);
		if (BitTest(gamemode,0x04)) {
			// allowed to use forcepowers
			if (mana > 0 && BitTest(botmode,0x4000)) // bot has mana & has a target
			{
				if (BitTest(forceflags,0x4) && curweap==10 && targweap!=10 && targweap!=1 && targweap!=4 && targweap!=8) // force pull allowed - bot has saber and target has gun
				{
					call force_pull;
				}
				else // choose random force power attack
				{
					tempflex1=rand()*7;
					//tempflex1=7; // hack for testing only
					if (tempflex1 <= 1 && BitTest(forceflags,0x4)) // pull
					{
						call force_pull;
					}
					else if (tempflex1 <= 2 && BitTest(forceflags,0x400)) // grip
					{
						call force_grip;
					}
					else if (tempflex1 <= 3 && BitTest(forceflags,0x40)) // blinding
					{
						call force_blinding;
					}
					else if (tempflex1 <= 4 && BitTest(forceflags,0x200)) // force throw
					{
						call force_throw;
					}
					else if (tempflex1 <= 5 && BitTest(forceflags,0x800)) // lightning
					{
						call force_lightning;
					}
					else if (tempflex1 <= 6 && BitTest(forceflags,0x1000)) // destruction
					{
						call force_destruction;
					}
					else if (BitTest(forceflags,0x2000)) // deadly sight
					{
						call force_deadlysight;
					}
				}
			}
		}
		SetTimerEx(3.0+rand()*(6-difficulty), 501, -1, -1); // schedule another force attack
	}
	else if (GetSenderId() == 502 && BitTest(botmode,0x10000)) // force power defensive/evasive && bot alive
	{
		gamemode = SendMessageEx(srv, user7, 1004, -1, -1, -1);
		if (BitTest(gamemode,0x04)) {
			// allowed to use forcepowers
			if (mana > 0) // bot has mana
			{
				if (BitTest(forceflags,0x10) && GetThingHealth(rbot) < 70) // force heal allowed - bot is low on health
				{
					call force_healing;
				}
				else
				{

				tempflex1=rand()*6;
				if (tempflex1 <= 1 && BitTest(forceflags,0x20))
				{
					call force_persuasion;
				}
				else if (tempflex1 <= 2 && BitTest(forceflags,0x80))
				{
					call force_absorb;
				}
				else if (tempflex1 <= 3 && BitTest(forceflags,0x8))
				{
					call force_seeing;
				}
				else if (tempflex1 <= 4 && BitTest(forceflags,0x10))
				{
					call force_healing;
				}
				else if (tempflex1 <= 5 && BitTest(forceflags,0x1))
				{
					call force_speed;
				}
				else if (tempflex1 <= 6 && BitTest(forceflags,0x100))
				{
					call force_protection;
				}
				//else if (BitTest(forceflags,0x2))
				//{
				//	call force_jump;
				//}

				}
			}
		}
		SetTimerEx(3.0+rand()*(6-difficulty), 502, -1, -1); // schedule another force defense
	}
	return;

user0: // force powers against bot (legacy handler)
	rbot = SendMessageEx(srv, user7, 1013, -1, -1, -1);
	curweap = SendMessageEx(srv, user7, 1014, -1, -1, -1);
	enemy=GetParam(1);
	bin=GetParam(2);
	rank=GetParam(3);

	if (bin == 24) // force pull
	{
		if (BitTest(forcemode,0x80)) return; // force absorb makes bot immume to pull
		if (curweap > 1 && curweap != 10) // don't force pull fists or saber
		{
			item = CreateThingAtPos(tpl0[curweap], GetThingSector(rbot), GetThingPos(rbot), '0 0 0'); // Create a powerup corresponding to the current weapon
			SetTimerEx(0.2, 24, item, 0); // Make the powerup collide later
			SetTimerEx(0.25, 24, item, 0); // Duplicate for internet games
			ApplyForce(item, VectorScale(VectorNorm(VectorSub(GetThingPos(enemy), GetThingPos(rbot))), 30)); // Throw the powerup at the player
		}
		SendTrigger(-1, 101030, botid, enemy, bin, rank); // send it to srv2
	}
	else if (bin == 27) // Force Blinding
	{
		if (BitTest(forcemode,0x08)) return; // force seeing makes bot immume to blinding
		if(GetActorFlags(rbot) & 0x800) return; // bot already blind
		SetActorFlags(rbot, 0x800); // blind bot
		SetTimerEx(0.1, 230, -1, -1); // choose random move direction
		SetTimerEx(rank * 4, 27, 0, 0);
		SendTrigger(-1, 101030, botid, enemy, bin, rank); // send it to srv2
	}
	else if (bin == 34) // Deadly Sight
	{
		DamageThing(rbot, 4 * rank, 0x8, enemy);
		CreateThingAtPos(smoke_tpl, GetThingSector(rbot), GetThingPos(rbot), '0 0 0'); // create smoke effects
		SendTrigger(-1, 101030, botid, enemy, bin, rank); // send it to srv2
	}

	ReturnEx(1);
	return;

// Execute public API function for this cog
// Param 0 = Function ID
// The remaining params will be processed according to the requested function
// For example, param1 might be an index into an array.
// Returns the function-specific result of the execution
user7:
	if (GetParam(0) == 1000) ReturnEx(forcemode);
	else if (GetParam(0) == 1001) ReturnEx(mana);
	else if (GetParam(0) == 1002) ReturnEx(forcearmor);
	else if (GetParam(0) == 3000) {
		// Bot spawned
		SetTimerEx(0.5, 500, -1, -1); // increase mana over time 
		SetTimerEx(5.0, 501, -1, -1); // force attacks
		SetTimerEx(5.0, 502, -1, -1); // force defensive/evasive
		forcemode=0; // clear active force powers
		mana=400;
		forcearmor = 0;
		ReturnEx(0);
	} else if (GetParam(0) == 3001) {
		// Bot died
		KillTimerEx(500); // stop force mana increase
		KillTimerEx(501); // stop force attacks
		KillTimerEx(502); // stop force defenses
		forcemode=0; // clear active force powers
		ReturnEx(0);
	} else if (GetParam(0) == 3002) {
		// Bot damaged
		damage = GetParam(1);
		damagetype = GetParam(2);
		#damager = GetParam(3); // projectile - attacker=GetThingParent()

		if (BitTest(damagetype,0x08) && BitTest(forcemode,0x80)) // force damage & force absorb is active
		{
			target = SendMessageEx(srv, user7, 1010, -1, -1, -1);
			SendTrigger(-1, 101025, botid, rbot, target, 28); // tell client to play sound
			// TODO: This mana/damage handling doesn't really match how the player inventory does it
			mana=mana+damage*(1+difficulty)/2; // This sort of matches player absorb handling
			if (mana > 400) mana=400;
			damage = 0; // This does not - damage would only be zero on rank four absorb
		}

		if (BitTest(forcemode,0x100)) // protection enabled
		{
			if (BitTest(30, damagetype)) // If damage from energy, fire, force or saber
			{
				forcearmor = forcearmor - damage;
				if (forceArmor < 0) {
					damage = -forceArmor;
				} else {
					damage = 0;
				}
			}
			if (forcearmor <= 0) // no force armor left - switch off protection
			{
				KillTimerEx(29);
				forcemode=BitClear(forcemode,0x100); // protection is no longer active
				rbot = SendMessageEx(srv, user7, 1013, -1, -1, -1);
				ClearThingFlags(rbot, 4); // remove magseal from bot
				SendTrigger(-1, 101026, botid, rbot, -1, 29); // tell client to stop playing sound
			}
		}

		// Return any leftover damage
		ReturnEx(damage);
		return;
	}
	// Otherwise, report error
	else {
		jkStringClear();
		jkStringConcatFormattedInt(GetSenderRef(), "rbot-srv-force.cog :: ERROR :: Cog %d");
		jkStringConcatFormattedInt(GetParam(0), " has requested an invalid function ID, %d");
		jkStringOutput(-1, -1);
	}
	return;

force_speed:
	if (!BitTest(forcemode,0x4000) && !BitTest(forcemode,0x8000)) // no lightside or darkside surge
	{
		if (mana < 20) return;
		mana = mana-20;
	}
	if (BitTest(forcemode,0x01)) return; // already active
	PlayMode(rbot, 24);
	SendTrigger(-1, 101025, botid, rbot, -1, 22); // tell client to play sound
	forcemode=BitSet(forcemode,0x01); // speed is now active
	SetTimerEx(7+(difficulty * 2.5), 22, 0, 0); // switch it off later
	return;

force_jump:
	if (!BitTest(forcemode,0x4000) && !BitTest(forcemode,0x8000)) // no lightside or darkside surge
	{
		if (mana < 20) return;
		mana = mana-20;
	}
	SendTrigger(-1,101025,botid,rbot,-1,21); // get client to play 'jump' sound
	ApplyForce(rbot, VectorScale(VectorSub(GetThingLVec(rbot), '0 0 -90'), 5.0));
	return;

force_pull:
	if (GetActorFlags(rbot) & 0x800) return; // bot blind
	if (!BitTest(forcemode,0x4000) && !BitTest(forcemode,0x8000)) // no lightside or darkside surge
	{
		if (mana < 20) return;
		mana = mana-20;
	}
	if(GetHealth(target) > 0) // target is still alive
	{
		if (GetThingType(target) == 2) // bot
		{
			targweap=SendMessageEx(GetThingCaptureCog(target), user1, -1, -1, -1, -1);
			if (targweap > 1 && targweap != 10) // don't pull fists or saber
			{
				//print("force pull - bot");
				PlayMode(rbot, 24); // play 'force attack' key
				Sleep(0.3);
				SendMessageEx(GetThingCaptureCog(target), user0, target, rbot, 24, difficulty*2);
				PlaySoundThing(pullSound, rbot, 1.0, -1, -1, 0x80); // play 'pull' sound
			}
		}
		else if (GetThingType(target) == 10) // player
		{
			targweap=GetCurWeapon(target);
			if (targweap==11) targweap=10; // If player has saber, set it to 10 for simplicity
			if (targweap > 1 && targweap != 10) // don't pull fists or saber
			{
				PlayMode(rbot, 24); // play 'force attack' key
				Sleep(0.3);
				forcetarget=target;
				PlaySoundThing(pullSound, rbot, 1.0, -1, -1, 0x80); // play 'pull' sound
				item = CreateThingAtPos(tpl0[GetCurWeapon(forcetarget)], GetThingSector(forcetarget), GetThingPos(forcetarget), '0 0 0'); // Create a powerup corresponding to the current weapon
				SetCollideType(item, 0); // Set the created powerup to no collide for now...
				SetTimerEx(0.3, 24, item, 0); // ...and set a timer to make it collide again later
				ApplyForce(item, VectorScale(VectorNorm(VectorSub(GetThingPos(rbot), GetThingPos(forcetarget))), 30)); // Throw the powerup at the bot
				ChangeInv(forcetarget, GetCurWeapon(forcetarget), -1); // Remove the weapon from the player
				SelectWeapon(forcetarget, 1);
			}
		}
	}
	return;

force_seeing:
	if (!BitTest(forcemode,0x4000) && !BitTest(forcemode,0x8000)) // no lightside or darkside surge
	{
		if (mana < 30) return;
		mana = mana-30;
	}
	if (BitTest(forcemode,0x08)) return; // already active
	PlayMode(rbot, 24);
	forcemode=BitSet(forcemode,0x08); // seeing is now active
	SendTrigger(-1, 101025, botid, rbot, -1, 23); // tell client to play sound
	SetTimerEx(7+(difficulty * 5), 23, 0, 0); // switch it off later
	return;

force_healing:
	if (!BitTest(forcemode,0x4000)) // no lightside surge
	{
		if (mana < 200) return;
		mana = mana-200;
	}
	if (GetThingHealth(rbot) > 99) return;
	PlayMode(rbot, 24);
	SendTrigger(-1, 101025, botid, rbot, -1, 25); // tell client to play sound
	if(GetThingHealth(rbot) > 0) HealThing(rbot, 20 * (2+difficulty));
	return;

force_persuasion:
	if (!BitTest(forcemode,0x4000)) // no lightside surge
	{
		if (mana < 250) return;
		mana = mana-250;
	}
	if (BitTest(forcemode,0x20)) return; // already active
	forcemode=BitSet(forcemode,0x20); // persuasion is now active
	SetActorFlags(rbot, 0x80);
	SendTrigger(-1, 101025, botid, rbot, -1, 26); // tell client to play sound
	SetTimerEx(2+(difficulty * 10), 26, 0, 0); // switch it off later
	return;

force_blinding:
	if (!BitTest(forcemode,0x4000)) // no lightside surge
	{
		if (mana < 100) return;
		mana = mana-100;
	}
	PlayMode(rbot, 24);
	Sleep(0.3);
	if(GetThingHealth(rbot) <= 0) Return; // He could die during the sleep
	item = CreateThingAtPos(force_blinding, GetThingSector(rbot), VectorAdd(GetThingPos(rbot), '0.0 0.0 0.04'), '0.0 0.0 0.0');
	SetThingLook(item, VectorSub(GetThingPos(target), GetThingPos(rbot)));
	SendTrigger(-1, 101025, botid, rbot, target, 27); // tell client to play sound
	if (GetThingType(target) == 2) // another bot
	{
		SendMessageEx(GetThingCaptureCog(target), user0, target, rbot, 27, 2+difficulty);  // send info to bot
	}
	else if (GetThingType(target) == 10) // player & does not have force seeing activated
	{
		SendTrigger(target, 101999, GetThingSignature(target), rbot, 27, 2+difficulty); // send info to player
	}
	return;

force_absorb:
	if (!BitTest(forcemode,0x4000)) // no lightside surge
	{
		if (mana < 200) return;
		mana = mana-200;
	}
	if (BitTest(forcemode,0x80)) return; // already active
	PlayMode(rbot, 24);
	forcemode=BitSet(forcemode,0x80); // absorb is now active
	SetTimerEx(2+(difficulty * 5), 28, 0, 0); // switch it off later
	return;

force_protection:
	if (!BitTest(forcemode,0x4000)) // no lightside surge
	{
		if (mana < 300) return;
		mana = mana-300;
	}
	if (BitTest(forcemode,0x100)) return; // already active
	SetThingFlags(rbot, 4); // Make the bot magsealed
	forcemode=BitSet(forcemode,0x100); // protection is now active
	forcearmor=(3+difficulty)*75;
	SendTrigger(-1, 101025, botid, rbot, (3+difficulty) * 10, 29); // tell client to play sound
	SetTimerEx((3+difficulty) * 10, 29, 0, 0); // switch it off later
	return;

force_throw:
	if (GetActorFlags(rbot) & 0x800) return; // bot blind
	if (!BitTest(forcemode,0x8000)) // no darkside surge
	{
		if (mana < 30) return;
		mana = mana-30;
	}
	if(HasLOS(rbot, target)) // check that we still have a LOS on it...
	{
		debris = FirstThingInView(rbot, 40 + 20 * (2+difficulty), 5 + difficulty, 0x010); // check if any debris is available before activating
		if (debris != -1)
		{
			PlayMode(rbot, 24);
			SendTrigger(-1, 101025, botid, rbot, target, 30); // tell client to play sound
			// Check for debris objects in view.
			debris = FirstThingInView(rbot, 40 + 20 * (2+difficulty), 5 + difficulty, 0x010);   // 0x010 debris
			while(debris != -1)
			{
				if(HasLOS(rbot, debris))
				{
					tempvector1 = VectorScale(VectorNorm(VectorSub(GetThingPos(target), GetThingPos(debris))), 300.0);
					DetachThing(debris);
					ApplyForce(debris, tempvector1);
				}
				debris = NextThingInView();
			}
		}
	}
	return;

force_grip:
	if (GetActorFlags(rbot) & 0x800) return; // bot blind
	if (!BitTest(forcemode,0x8000)) // no darkside surge
	{
		if (mana < 50) return;
		mana = mana-50;
	}
	PlayMode(rbot, 24);
	if (!(GetThingFlags(target) & 0x200) && HasLOS(rbot,target) && VectorDist(GetThingPos(rbot), GetThingPos(target)) <= 1) // cannot be gripped
	{
		if (GetThingType(target) == 2) // another bot
		{
			SetTimerEx(0.1, 31, target, -1);
			forcemode=BitSet(forcemode,0x400); // grip is now active
		}
		else // player - still need to work it out
		{
			if(!IsInvActivated(target, 29))        // Protection makes player immune to Grip
			{
				SetTimerEx(0.1, 31, target, -1);
				forcemode=BitSet(forcemode,0x400); // grip is now active
			}
		}
	}
	return;

force_lightning:
	if (!BitTest(forcemode,0x8000)) // no darkside surge
	{
		if (mana < 40) return;
		mana = mana-40;
	}
	FireProjectile(rbot, force_lightning, -1, 35, '0 0 0', '0 0 0', 1.0, 0, 10, 5);
	SendTrigger(-1, 101025, botid, rbot, target, 32); // tell client to play sound
	return;

force_destruction:
	if (!BitTest(forcemode,0x8000)) // no darkside surge
	{
		if (mana < 200) return;
		mana = mana-200;
	}
	FireProjectile(rbot, force_destruction, -1, 24, '0 0 0', '0 0 0', 1.0, 0, 10, 5);
	SendTrigger(-1, 101025, botid, rbot, target, 33); // tell client to play sound
	return;

force_deadlysight:
	if (GetActorFlags(rbot) & 0x800) return; // bot blind
	if (!BitTest(forcemode,0x8000)) // no darkside surge
	{
		if (mana < 300) return;
		mana = mana-300;
	}
	PlayMode(rbot, 24);
	SendTrigger(-1, 101025, botid, rbot, target, 34); // tell client to play sound
	dscount=0;
	starthealth=GetThingHealth(rbot);
	SetTimerEx(0.1, 34, -1, -1);
	forcemode=BitSet(forcemode,0x2000); // deadly sight is now active
	return;

end
