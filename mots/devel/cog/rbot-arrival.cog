# Rbot Arrival Cog
#
# Server-only
#
# This cog makes a bot wait for a thing to arrive at a frame.
#
# Rbots originally created by Raynar

flags=0x280

symbols

message		trigger
message		arrived
message		timer

# Check thing frame when the bot reaches this node
thing		node=-1								nolink

# Check thing frame when the bot is running in this direction
# -1 = forward or backward
# 0 = backward only
# 1 = forward only
int			rundir=-1

# The thing that must arrive at a frame
thing		arriver=-1

# The frame that the thing must arrive at
int			frame=-1

# How long to wait after the thing arrives before the bot can start moving again
# A delay of 0 will generate the arrival event immediately
flex		delay=0.0

# How long to wait for arrival before bot is 'lost'
flex		timeout=10.0

# Keep track of whether any bots might be waiting for any events
# This prevents sending duplicate and unnecessary triggers
int			waiting=0							local

# Special mode flags to apply to the bot when it needs to await arrival
int			spinf=0

# Transient working vars
int			botid								local
#thing		rbot								local
thing		rbotnode							local
int			rbotrundir							local

end

# ========================================================================================

code

trigger:
	if (IsMulti() && !IsServer()) return; // Host only

	if (GetSourceRef() == 11010) // Bot arrived at node
	{
		botid = GetParam(0); // the bot making the request
		#rbot = GetParam(1); // the bot thing
		rbotnode = GetParam(2); // which node the bot arrived at
		rbotrundir = GetParam(3); // which direction the bot is running

		// Bot must be at the node
		if (rbotnode != node) return;

		// Bot must be running the right direction
		if (rbotrundir != rundir && rundir != -1) return;

		// Thing must not already be at the desired frame
		if (GetCurFrame(arriver) == frame && !IsThingMoving(arriver)) return;

		// Set the waiting flag so we know to send the arrival event when the thing
		// arrives at the frame
		waiting = 1;

		// Tell bot to wait
		SendTrigger(-1, 11040, botid, GetSelfCog(), 1, timeout);

		// Send special info for node, if necessary
		if (spinf)
		{
			SendTrigger(-1, 11020, botid, spinf, 2, -1); // send special info to bot (mode 2 = activate for short duration)
		}
	}
	return;

arrived:
	if (IsMulti() && !IsServer()) return; // Host only

	// Note: Check the frame and movement before applying the delay.
	// In some cases, waiting until the thing is moving again before telling the
	// bot to continue may be deliberate.

	// Thing is not at the desired frame
	if (GetCurFrame(arriver) != frame) return;

	// Thing is still moving and did not stop at the frame
	if (IsThingMoving(arriver)) return;

	// Check for delay
	if (delay > 0)
	{
		SetTimerEx(delay, 1, -1, -1);
		return;
	}

	goto tryarrival;
	return;

timer:
	if (GetSenderId() == 1)
	{
		call tryarrival;
		return;
	}
	return;

tryarrival:
	if (waiting) // there is a bot waiting for this event
	{
		// Clear the waiting flag - no need to send another arrival event
		// until next time a bot is waiting for one
		waiting = 0;

		// Broadcast arrival event to all bots
		SendTrigger(-1, 11050, GetSelfCog(), 1, -1, -1);
	}
	return;

end

