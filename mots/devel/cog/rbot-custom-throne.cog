# Rbot Customizer Cog - Imperial Throne Room
#
# Server-only
# Type ID: 3000
#
# Rbots originally created by Raynar

flags=0x40

symbols

message		startup
message		user7

sector		sec0=-1								nolink
sector		sec1=-1								nolink
sector		sec2=-1								nolink
sector		sec3=-1								nolink
sector		sec4=-1								nolink
sector		sec5=-1								nolink
sector		sec6=-1								nolink
sector		sec7=-1								nolink
sector		sec8=-1								nolink
sector		sec9=-1								nolink
sector		sec10=-1							nolink
sector		sec11=-1							nolink
sector		sec12=-1							nolink
sector		sec13=-1							nolink
sector		sec14=-1							nolink
sector		sec15=-1							nolink
sector		sec16=-1							nolink
sector		sec17=-1							nolink
sector		sec18=-1							nolink
sector		sec19=-1							nolink

int			zone0=-1
int			zone1=-1
int			zone2=-1
int			zone3=-1
int			zone4=-1
int			zone5=-1
int			zone6=-1
int			zone7=-1
int			zone8=-1
int			zone9=-1
int			zone10=-1
int			zone11=-1
int			zone12=-1
int			zone13=-1
int			zone14=-1
int			zone15=-1
int			zone16=-1
int			zone17=-1
int			zone18=-1
int			zone19=-1

int			i									local
thing		rbot								local
thing		item								local
thing		potential							local
int			zone								local
int			pzone								local
int			priority							local

end

code

startup:
	if (IsMulti() && !IsServer()) return; // Host only

	// Allow other server-side cogs to discover this one by its type
	SendTrigger(-1, 1852000, 3000, GetSelfCog(), -1, -1);

	return;

// Execute public API function for this cog
// Param 0 = Function ID
// The remaining params will be processed according to the requested function
// For example, param1 might be an index into an array.
// Returns the function-specific result of the execution
user7:
	if (GetParam(0) == 30003010) // get item priority
	{
		rbot = GetParam(1);
		item = GetParam(2);
		priority = GetParam(3);

		if (priority != -1)
		{
			// Determine which zones, if any, the bot and item are in
			zone = -1;
			pzone = -1;
			for (i = 0 ; i < 20 ; i = i + 1)
			{
				if (sec0[i] == GetThingSector(rbot)) zone = zone0[i];
				if (sec0[i] == GetThingSector(item)) pzone = zone0[i];
			}

			// Compare zones
			if (zone != -1 && pzone != -1 && zone != pzone)
			{
				// Bot and item are in different zones, ignore item
				priority = -1;
			}
		}

		ReturnEx(priority);
		return;
	}

	if (GetParam(0) == 30003020) // pickup item
	{
		#rbot = GetParam(1);
		#item = GetParam(2);
		// No item pickup customization implemented
		ReturnEx(0); // item pickup not handled
		return;
	}

	if (GetParam(0) == 30003030) // get target priority
	{
		rbot = GetParam(1);
		potential = GetParam(2);
		priority = GetParam(3);

		if (priority != -1)
		{
			// Determine which zones, if any, the bot and target are in
			zone = -1;
			pzone = -1;
			for (i = 0 ; i < 20 ; i = i + 1)
			{
				if (sec0[i] == GetThingSector(rbot)) zone = zone0[i];
				if (sec0[i] == GetThingSector(potential)) pzone = zone0[i];
			}

			// Compare zones
			if (zone != -1 && pzone != -1 && zone != pzone)
			{
				// Bot and target are in different zones, reduce priority
				// Bot should try to attack targets in its own zone first
				priority = 0;
			}
		}

		ReturnEx(priority);
		return;
	}

	if (GetParam(0) == 30003050) // decide whether to move toward target
	{
		rbot = GetParam(1);
		potential = GetParam(2);

		// Determine which zones, if any, the bot and target are in
		zone = -1;
		pzone = -1;
		for (i = 0 ; i < 20 ; i = i + 1)
		{
			if (sec0[i] == GetThingSector(rbot)) zone = zone0[i];
			if (sec0[i] == GetThingSector(potential)) pzone = zone0[i];
		}

		// Compare zones
		if (zone != -1 && pzone != -1 && zone != pzone)
		{
			// Bot and target are in different zones, do not move toward target
			ReturnEx(0);
			return;
		}

		// Bot is not in a zone, or bot and target are in the same zone, so allow moving toward target
		ReturnEx(1);
		return;
	}

	// Report error if function ID does not match anything above
	jkStringClear();
	jkStringConcatFormattedInt(GetSenderRef(), "rbot-custom-throne.cog :: ERROR :: Cog %d");
	jkStringConcatFormattedInt(GetParam(0), " has requested an invalid function ID, %d");
	jkStringOutput(-1, -1);
	return;

end
